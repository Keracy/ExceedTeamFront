{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\"\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\"\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\"\n  },\n  loginBtn: {\n    marginTop: \"20px\"\n  },\n  link: {\n    color: \"#3583d2\"\n  },\n  errorMessage: {\n    marginTop: \"-20px\"\n  }\n});\n\nconst RegisterPage = props => {\n  const {\n    registerUser,\n    registerEmailExist\n  } = props;\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  const [validationError, setValidationError] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (user.username.length <= 3 || user.username.length >= 50) {\n      setUsernameError(true);\n    } else {\n      setUsernameError(false);\n    }\n\n    if (user.password.length <= 6) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n    }\n\n    if (user.phone.length < 11 || user.username.length > 12) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n\n    usernameError || phoneError || passwordError ? setValidationError(true) : setValidationError(false);\n\n    if (!validationError) {\n      console.log(usernameError, phoneError, passwordError);\n      registerUser(user);\n      console.log(\"POST\", user);\n    }\n  };\n\n  console.log(\"ERRORS\", usernameError, phoneError, passwordError);\n  console.log(\"STATE\", user);\n  console.log(\"VALIDATION ERROR\", validationError);\n  useEffect(() => {\n    if (validationError) {\n      console.log(\"ERROR DO NOT POST\");\n    }\n  }, [validationError]);\n\n  const changeHandler = event => {\n    event.persist();\n\n    switch (event.target.name) {\n      case \"username\":\n        setUser(prevValue => ({ ...prevValue,\n          username: event.target.value\n        }));\n        break;\n\n      case \"password\":\n        setUser(prevValue => ({ ...prevValue,\n          password: event.target.value\n        }));\n        break;\n\n      case \"phone\":\n        setUser(prevValue => ({ ...prevValue,\n          phone: event.target.value\n        }));\n        break;\n\n      case \"email\":\n        setUser(prevValue => ({ ...prevValue,\n          email: event.target.value\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const s = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.registerBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    component: \"form\",\n    onSubmit: submitHandler,\n    className: s.formBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Username\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), usernameError ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Username\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Password\",\n    type: \"password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), passwordError ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Password\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    type: \"email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"E-Mail\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), emailError ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Enter a correct E-Mail\") : /*#__PURE__*/React.createElement(React.Fragment, null), registerEmailExist ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"E-Mail already exist\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    name: \"phone\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Phone\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }), phoneError ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Phone\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"Log in!\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: s.loginBtn,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = {\n  registerUser\n};\n\nconst mapStateToProps = state => {\n  return {\n    registerEmailExist: state.registerEmailExist\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx"],"names":["React","useState","useEffect","Button","TextField","Typography","makeStyles","Link","registerUser","connect","useStyles","registerBlock","textAlign","display","justifyContent","alignItems","height","formBlock","padding","width","flexDirection","border","borderRadius","backgroundColor","inputField","marginBottom","loginBtn","marginTop","link","color","errorMessage","RegisterPage","props","registerEmailExist","user","setUser","username","password","phone","email","usernameError","setUsernameError","passwordError","setPasswordError","emailError","setEmailError","phoneError","setPhoneError","validationError","setValidationError","submitHandler","event","preventDefault","length","console","log","changeHandler","persist","target","name","prevValue","value","handleInputChange","e","s","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\",\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\",\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\",\n  },\n  loginBtn: {\n    marginTop: \"20px\",\n  },\n  link: {\n    color: \"#3583d2\",\n  },\n  errorMessage: {\n    marginTop: \"-20px\",\n  },\n});\n\nconst RegisterPage = (props) => {\n  const { registerUser, registerEmailExist } = props;\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  const [validationError, setValidationError] = useState(false);\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (user.username.length <= 3 || user.username.length >= 50) {\n      setUsernameError(true);\n    } else {\n      setUsernameError(false);\n    }\n    if (user.password.length <= 6) {\n      setPasswordError(true);\n    } else {\n      setPasswordError(false);\n    }\n    if (user.phone.length < 11 || user.username.length > 12) {\n      setPhoneError(true);\n    } else {\n      setPhoneError(false);\n    }\n    usernameError || phoneError || passwordError\n      ? setValidationError(true)\n      : setValidationError(false);\n\n    if (!validationError) {\n      console.log(usernameError, phoneError, passwordError);\n      registerUser(user);\n      console.log(\"POST\", user);\n    }\n  };\n\n  console.log(\"ERRORS\", usernameError, phoneError, passwordError);\n  console.log(\"STATE\", user);\n  console.log(\"VALIDATION ERROR\", validationError);\n\n  useEffect(() => {\n    if (validationError) {\n      console.log(\"ERROR DO NOT POST\");\n    }\n  }, [validationError]);\n\n  const changeHandler = (event) => {\n    event.persist();\n    switch (event.target.name) {\n      case \"username\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          username: event.target.value,\n        }));\n        break;\n      case \"password\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          password: event.target.value,\n        }));\n        break;\n      case \"phone\":\n        setUser((prevValue) => ({ ...prevValue, phone: event.target.value }));\n        break;\n      case \"email\":\n        setUser((prevValue) => ({ ...prevValue, email: event.target.value }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const s = useStyles();\n  return (\n    <div className={s.registerBlock}>\n      <form component=\"form\" onSubmit={submitHandler} className={s.formBlock}>\n        <TextField\n          name=\"username\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Username\"\n          variant=\"outlined\"\n        />\n        {usernameError ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Username\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          name=\"password\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n        />\n        {passwordError ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Password\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          type=\"email\"\n          name=\"email\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"E-Mail\"\n          variant=\"outlined\"\n        />\n        {emailError ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct E-Mail\n          </Typography>\n        ) : (\n          <></>\n        )}\n        {registerEmailExist ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            E-Mail already exist\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          name=\"phone\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Phone\"\n          variant=\"outlined\"\n        />\n        {phoneError ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Phone\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <Typography>\n          Already have an account?{\" \"}\n          <Link className={s.link} to=\"/auth\">\n            Log in!\n          </Link>\n        </Typography>\n        <Button\n          type=\"submit\"\n          className={s.loginBtn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  registerUser,\n};\nconst mapStateToProps = (state) => {\n  return {\n    registerEmailExist: state.registerEmailExist,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}