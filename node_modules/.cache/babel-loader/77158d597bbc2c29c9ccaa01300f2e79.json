{"ast":null,"code":"import { CHECK_AUTH_BEGIN, CHECK_AUTH_SUCCEED, CHECK_AUTH_FAIL, GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCEED, GET_EMPLOYEES_FAIL, SET_SEARCH_WORD, GET_EMPLOYEE_BEGIN, GET_EMPLOYEE_SUCCEED, GET_EMPLOYEE_FAIL, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCEED, ADD_EMPLOYEE_FAIL, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCEED, DELETE_EMPLOYEE_FAIL, CHANGE_EMPLOYEE_BEGIN, CHANGE_EMPLOYEE_SUCCEED, CHANGE_EMPLOYEE_FAIL, REGISTER_USER_BEGIN, REGISTER_USER_SUCCEED, REGISTER_USER_FAIL, LOGIN_USER_BEGIN, LOGIN_USER_SUCCEED, LOGIN_USER_FAIL, LOG_IN, LOG_OUT } from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = payload => {\n  return {\n    type: SET_SEARCH_WORD,\n    payload\n  };\n};\nexport const checkAuth = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CHECK_AUTH_BEGIN\n      });\n      const payload = {\n        token: localStorage.getItem(\"auth-token\"),\n        id: JSON.parse(localStorage.getItem(\"logged-user\"))._id\n      };\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/logged`, payload);\n      dispatch({\n        type: CHECK_AUTH_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: CHECK_AUTH_FAIL,\n        err_msg: err\n      });\n    }\n  };\n};\nexport const registerUser = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: REGISTER_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/register`, payload);\n      const registerEmailExist = data === \"email exist\" ? true : false;\n      dispatch({\n        type: REGISTER_USER_SUCCEED,\n        payload,\n        registerEmailExist: registerEmailExist\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_USER_FAIL,\n        err_msg: err\n      });\n    }\n  };\n};\nexport const loginUser = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: LOGIN_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/login`, payload);\n      dispatch({\n        type: LOGIN_USER_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        err_msg: err.message\n      });\n    }\n  };\n};\nexport const getEmployees = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEES_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/employees/`);\n      dispatch({\n        type: GET_EMPLOYEES_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEES_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const getEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`);\n      dispatch({\n        type: GET_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEE_FAIL,\n        err: err.massage\n      });\n    }\n  };\n};\nexport const addEmployee = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ADD_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/employees/`, payload);\n      console.log(data);\n      dispatch({\n        type: ADD_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EMPLOYEE_FAIL\n      });\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_EMPLOYEE_BEGIN\n      });\n      await axios.delete(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`);\n      dispatch({\n        type: DELETE_EMPLOYEE_SUCCEED,\n        id\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CHANGE_EMPLOYEE_BEGIN\n      });\n      const changedEmployee = await axios.patch(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`, payload);\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({\n        type: CHANGE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const logIn = () => {\n  return {\n    type: LOG_IN\n  };\n};\nexport const logOut = () => {\n  return {\n    type: LOG_OUT\n  };\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/actions/actions.js"],"names":["CHECK_AUTH_BEGIN","CHECK_AUTH_SUCCEED","CHECK_AUTH_FAIL","GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCEED","GET_EMPLOYEES_FAIL","SET_SEARCH_WORD","GET_EMPLOYEE_BEGIN","GET_EMPLOYEE_SUCCEED","GET_EMPLOYEE_FAIL","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCEED","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCEED","DELETE_EMPLOYEE_FAIL","CHANGE_EMPLOYEE_BEGIN","CHANGE_EMPLOYEE_SUCCEED","CHANGE_EMPLOYEE_FAIL","REGISTER_USER_BEGIN","REGISTER_USER_SUCCEED","REGISTER_USER_FAIL","LOGIN_USER_BEGIN","LOGIN_USER_SUCCEED","LOGIN_USER_FAIL","LOG_IN","LOG_OUT","axios","setSearchWord","payload","type","checkAuth","dispatch","token","localStorage","getItem","id","JSON","parse","_id","data","post","process","env","REACT_APP_PORT","err","err_msg","registerUser","registerEmailExist","loginUser","message","getEmployees","get","getEmployee","massage","addEmployee","console","log","deleteEmployee","delete","changeEmployee","changedEmployee","patch","logIn","logOut"],"mappings":"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","sourcesContent":["import {\n  CHECK_AUTH_BEGIN,\n  CHECK_AUTH_SUCCEED,\n  CHECK_AUTH_FAIL,\n  GET_EMPLOYEES_BEGIN,\n  GET_EMPLOYEES_SUCCEED,\n  GET_EMPLOYEES_FAIL,\n  SET_SEARCH_WORD,\n  GET_EMPLOYEE_BEGIN,\n  GET_EMPLOYEE_SUCCEED,\n  GET_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCEED,\n  ADD_EMPLOYEE_FAIL,\n  DELETE_EMPLOYEE_BEGIN,\n  DELETE_EMPLOYEE_SUCCEED,\n  DELETE_EMPLOYEE_FAIL,\n  CHANGE_EMPLOYEE_BEGIN,\n  CHANGE_EMPLOYEE_SUCCEED,\n  CHANGE_EMPLOYEE_FAIL,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCEED,\n  REGISTER_USER_FAIL,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCEED,\n  LOGIN_USER_FAIL,\n  LOG_IN,\n  LOG_OUT,\n} from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = (payload) => {\n  return { type: SET_SEARCH_WORD, payload };\n};\n\nexport const checkAuth = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: CHECK_AUTH_BEGIN });\n      const payload = {\n        token: localStorage.getItem(\"auth-token\"),\n        id: JSON.parse(localStorage.getItem(\"logged-user\"))._id,\n      };\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/logged`,\n        payload\n      );\n      dispatch({ type: CHECK_AUTH_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: CHECK_AUTH_FAIL, err_msg: err });\n    }\n  };\n};\n\nexport const registerUser = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: REGISTER_USER_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/register`,\n        payload\n      );\n      const registerEmailExist = data === \"email exist\" ? true : false;\n      dispatch({\n        type: REGISTER_USER_SUCCEED,\n        payload,\n        registerEmailExist: registerEmailExist,\n      });\n    } catch (err) {\n      dispatch({ type: REGISTER_USER_FAIL, err_msg: err });\n    }\n  };\n};\n\nexport const loginUser = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_USER_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/login`,\n        payload\n      );\n      dispatch({ type: LOGIN_USER_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: LOGIN_USER_FAIL, err_msg: err.message });\n    }\n  };\n};\n\nexport const getEmployees = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEES_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/`\n      );\n      dispatch({ type: GET_EMPLOYEES_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEES_FAIL, err: err.message });\n    }\n  };\n};\nexport const getEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEE_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`\n      );\n      dispatch({ type: GET_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEE_FAIL, err: err.massage });\n    }\n  };\n};\nexport const addEmployee = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: ADD_EMPLOYEE_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/`,\n        payload\n      );\n      console.log(data);\n      dispatch({ type: ADD_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: ADD_EMPLOYEE_FAIL });\n    }\n  };\n};\nexport const deleteEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_EMPLOYEE_BEGIN });\n      await axios.delete(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`\n      );\n      dispatch({ type: DELETE_EMPLOYEE_SUCCEED, id });\n    } catch (err) {\n      dispatch({ type: DELETE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: CHANGE_EMPLOYEE_BEGIN });\n      const changedEmployee = await axios.patch(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`,\n        payload\n      );\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data,\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({ type: CHANGE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\n\nexport const logIn = () => {\n  return { type: LOG_IN };\n};\n\nexport const logOut = () => {\n  return { type: LOG_OUT };\n};\n"]},"metadata":{},"sourceType":"module"}