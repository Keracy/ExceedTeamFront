{"ast":null,"code":"import { CHECK_AUTH_BEGIN, CHECK_AUTH_SUCCEED, CHECK_AUTH_FAIL, GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCEED, GET_EMPLOYEES_FAIL, SET_SEARCH_WORD, GET_EMPLOYEE_BEGIN, GET_EMPLOYEE_SUCCEED, GET_EMPLOYEE_FAIL, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCEED, ADD_EMPLOYEE_FAIL, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCEED, DELETE_EMPLOYEE_FAIL, CHANGE_EMPLOYEE_BEGIN, CHANGE_EMPLOYEE_SUCCEED, CHANGE_EMPLOYEE_FAIL, REGISTER_USER_BEGIN, REGISTER_USER_SUCCEED, REGISTER_USER_FAIL, LOGIN_USER_BEGIN, LOGIN_USER_SUCCEED, LOGIN_USER_FAIL } from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = payload => {\n  return {\n    type: SET_SEARCH_WORD,\n    payload\n  };\n};\nexport const checkAuth = () => {\n  return async dispatch => {\n    dispatch({\n      type: CHECK_AUTH_BEGIN\n    });\n    const {\n      data\n    } = axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/logged`, payload);\n  };\n};\nexport const registerUser = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: REGISTER_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/register`, payload);\n      const registerEmailExist = data === \"email exist\" ? true : false;\n      dispatch({\n        type: REGISTER_USER_SUCCEED,\n        payload,\n        registerEmailExist: registerEmailExist\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_USER_FAIL,\n        err_msg: err\n      });\n    }\n  };\n};\nexport const loginUser = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: LOGIN_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/login`, payload);\n      dispatch({\n        type: LOGIN_USER_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGIN_USER_FAIL,\n        err_msg: err.message\n      });\n    }\n  };\n};\nexport const getEmployees = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEES_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/employees/`);\n      dispatch({\n        type: GET_EMPLOYEES_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEES_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const getEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`);\n      dispatch({\n        type: GET_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEE_FAIL,\n        err: err.massage\n      });\n    }\n  };\n};\nexport const addEmployee = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ADD_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/employees/`, payload);\n      console.log(data);\n      dispatch({\n        type: ADD_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EMPLOYEE_FAIL\n      });\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_EMPLOYEE_BEGIN\n      });\n      await axios.delete(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`);\n      dispatch({\n        type: DELETE_EMPLOYEE_SUCCEED,\n        id\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CHANGE_EMPLOYEE_BEGIN\n      });\n      const changedEmployee = await axios.patch(`http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`, payload);\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({\n        type: CHANGE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/actions/actions.js"],"names":["CHECK_AUTH_BEGIN","CHECK_AUTH_SUCCEED","CHECK_AUTH_FAIL","GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCEED","GET_EMPLOYEES_FAIL","SET_SEARCH_WORD","GET_EMPLOYEE_BEGIN","GET_EMPLOYEE_SUCCEED","GET_EMPLOYEE_FAIL","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCEED","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCEED","DELETE_EMPLOYEE_FAIL","CHANGE_EMPLOYEE_BEGIN","CHANGE_EMPLOYEE_SUCCEED","CHANGE_EMPLOYEE_FAIL","REGISTER_USER_BEGIN","REGISTER_USER_SUCCEED","REGISTER_USER_FAIL","LOGIN_USER_BEGIN","LOGIN_USER_SUCCEED","LOGIN_USER_FAIL","axios","setSearchWord","payload","type","checkAuth","dispatch","data","post","process","env","REACT_APP_PORT","registerUser","registerEmailExist","err","err_msg","loginUser","message","getEmployees","get","getEmployee","id","massage","addEmployee","console","log","deleteEmployee","delete","changeEmployee","changedEmployee","patch"],"mappings":"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","sourcesContent":["import {\n  CHECK_AUTH_BEGIN,\n  CHECK_AUTH_SUCCEED,\n  CHECK_AUTH_FAIL,\n  GET_EMPLOYEES_BEGIN,\n  GET_EMPLOYEES_SUCCEED,\n  GET_EMPLOYEES_FAIL,\n  SET_SEARCH_WORD,\n  GET_EMPLOYEE_BEGIN,\n  GET_EMPLOYEE_SUCCEED,\n  GET_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCEED,\n  ADD_EMPLOYEE_FAIL,\n  DELETE_EMPLOYEE_BEGIN,\n  DELETE_EMPLOYEE_SUCCEED,\n  DELETE_EMPLOYEE_FAIL,\n  CHANGE_EMPLOYEE_BEGIN,\n  CHANGE_EMPLOYEE_SUCCEED,\n  CHANGE_EMPLOYEE_FAIL,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCEED,\n  REGISTER_USER_FAIL,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCEED,\n  LOGIN_USER_FAIL,\n} from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = (payload) => {\n  return { type: SET_SEARCH_WORD, payload };\n};\n\nexport const checkAuth = () => {\n  return async (dispatch) => {\n    dispatch({ type: CHECK_AUTH_BEGIN });\n    const { data } = axios.post(\n      `http://localhost:${process.env.REACT_APP_PORT}/users/logged`,\n      payload\n    );\n  };\n};\n\nexport const registerUser = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: REGISTER_USER_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/register`,\n        payload\n      );\n      const registerEmailExist = data === \"email exist\" ? true : false;\n      dispatch({\n        type: REGISTER_USER_SUCCEED,\n        payload,\n        registerEmailExist: registerEmailExist,\n      });\n    } catch (err) {\n      dispatch({ type: REGISTER_USER_FAIL, err_msg: err });\n    }\n  };\n};\n\nexport const loginUser = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: LOGIN_USER_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/login`,\n        payload\n      );\n      dispatch({ type: LOGIN_USER_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: LOGIN_USER_FAIL, err_msg: err.message });\n    }\n  };\n};\n\nexport const getEmployees = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEES_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/`\n      );\n      dispatch({ type: GET_EMPLOYEES_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEES_FAIL, err: err.message });\n    }\n  };\n};\nexport const getEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEE_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`\n      );\n      dispatch({ type: GET_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEE_FAIL, err: err.massage });\n    }\n  };\n};\nexport const addEmployee = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: ADD_EMPLOYEE_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/`,\n        payload\n      );\n      console.log(data);\n      dispatch({ type: ADD_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: ADD_EMPLOYEE_FAIL });\n    }\n  };\n};\nexport const deleteEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_EMPLOYEE_BEGIN });\n      await axios.delete(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`\n      );\n      dispatch({ type: DELETE_EMPLOYEE_SUCCEED, id });\n    } catch (err) {\n      dispatch({ type: DELETE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: CHANGE_EMPLOYEE_BEGIN });\n      const changedEmployee = await axios.patch(\n        `http://localhost:${process.env.REACT_APP_PORT}/employees/${id}`,\n        payload\n      );\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data,\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({ type: CHANGE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}