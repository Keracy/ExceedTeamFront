{"ast":null,"code":"import { CHECK_AUTH_BEGIN, CHECK_AUTH_SUCCEED, CHECK_AUTH_FAIL, ADD_EMPLOYEE, GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCEED, GET_EMPLOYEES_FAIL, SET_SEARCH_WORD, GET_EMPLOYEE_BEGIN, GET_EMPLOYEE_SUCCEED, GET_EMPLOYEE_FAIL, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCEED, ADD_EMPLOYEE_FAIL, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCEED, DELETE_EMPLOYEE_FAIL, CHANGE_EMPLOYEE_BEGIN, CHANGE_EMPLOYEE_SUCCEED, CHANGE_EMPLOYEE_FAIL, REGISTER_USER_BEGIN, REGISTER_USER_SUCCEED, REGISTER_USER_FAIL, LOGIN_USER_BEGIN, LOGIN_USER_SUCCEED, LOGIN_USER_FAIL, LOG_OUT, SEARCH_EMPLOYEES_BEGIN, SEARCH_EMPLOYEES_SUCCEED, SEARCH_EMPLOYEES_FAIL } from \"../action-types\";\nconst initialState = {\n  users: [],\n  projects: [{\n    name: \"CRM-System\",\n    id: 0\n  }, {\n    name: \"Podcast Platform\",\n    id: 1\n  }, {\n    name: \"Social Network 'Kartana'\",\n    id: 2\n  }],\n  loaderActive: false,\n  err_msg: \"\",\n  searchWord: \"\",\n  loading: false,\n  currentEmployee: {},\n  registerEmailExist: null,\n  loggedUser: null,\n  isUserLogged: false\n};\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_AUTH_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case CHECK_AUTH_SUCCEED:\n      console.log(action.payload);\n      return { ...state,\n        isUserLogged: Boolean(action.payload)\n      };\n\n    case CHECK_AUTH_FAIL:\n      return { ...state,\n        err_msg: action.err_msg\n      };\n\n    case SET_SEARCH_WORD:\n      return { ...state,\n        searchWord: action.payload\n      };\n\n    case ADD_EMPLOYEE:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case GET_EMPLOYEES_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_EMPLOYEES_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: action.payload\n      };\n\n    case GET_EMPLOYEES_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case GET_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        currentEmployee: action.payload\n      };\n\n    case GET_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case ADD_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: [...state.users, action.payload]\n      };\n\n    case ADD_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case DELETE_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: state.users.filter(user => user._id !== action.id)\n      };\n\n    case DELETE_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case CHANGE_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case CHANGE_EMPLOYEE_SUCCEED:\n      if (action.payload.validationError) {\n        return { ...state,\n          loading: false\n        };\n      } else {\n        return { ...state,\n          loading: false,\n          currentEmployee: action.payload\n        };\n      }\n\n    case CHANGE_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case REGISTER_USER_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case REGISTER_USER_SUCCEED:\n      return { ...state,\n        loading: false,\n        registerEmailExist: action.registerEmailExist\n      };\n\n    case REGISTER_USER_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err_msg\n      };\n\n    case LOGIN_USER_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGIN_USER_SUCCEED:\n      let logged = false;\n\n      if (!(action.payload === \"auth failed\")) {\n        localStorage.setItem(\"auth-token\", action.payload.authToken);\n        localStorage.setItem(\"logged-user\", JSON.stringify(action.payload));\n        logged = true;\n      }\n\n      return { ...state,\n        loading: false,\n        loggedUser: action.payload,\n        isUserLogged: logged\n      };\n\n    case LOGIN_USER_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.err_msg\n      };\n\n    case LOG_OUT:\n      localStorage.clear();\n      return { ...state,\n        isUserLogged: false\n      };\n\n    case SEARCH_EMPLOYEES_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case SEARCH_EMPLOYEES_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: action.payload\n      };\n\n    case SEARCH_EMPLOYEES_FAIL:\n      return { ...state,\n        err_msg: action.err_msg\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/reducers/reducer.js"],"names":["CHECK_AUTH_BEGIN","CHECK_AUTH_SUCCEED","CHECK_AUTH_FAIL","ADD_EMPLOYEE","GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCEED","GET_EMPLOYEES_FAIL","SET_SEARCH_WORD","GET_EMPLOYEE_BEGIN","GET_EMPLOYEE_SUCCEED","GET_EMPLOYEE_FAIL","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCEED","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCEED","DELETE_EMPLOYEE_FAIL","CHANGE_EMPLOYEE_BEGIN","CHANGE_EMPLOYEE_SUCCEED","CHANGE_EMPLOYEE_FAIL","REGISTER_USER_BEGIN","REGISTER_USER_SUCCEED","REGISTER_USER_FAIL","LOGIN_USER_BEGIN","LOGIN_USER_SUCCEED","LOGIN_USER_FAIL","LOG_OUT","SEARCH_EMPLOYEES_BEGIN","SEARCH_EMPLOYEES_SUCCEED","SEARCH_EMPLOYEES_FAIL","initialState","users","projects","name","id","loaderActive","err_msg","searchWord","loading","currentEmployee","registerEmailExist","loggedUser","isUserLogged","rootReducer","state","action","type","console","log","payload","Boolean","err","filter","user","_id","validationError","logged","localStorage","setItem","authToken","JSON","stringify","error","clear"],"mappings":"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","sourcesContent":["import {\n  CHECK_AUTH_BEGIN,\n  CHECK_AUTH_SUCCEED,\n  CHECK_AUTH_FAIL,\n  ADD_EMPLOYEE,\n  GET_EMPLOYEES_BEGIN,\n  GET_EMPLOYEES_SUCCEED,\n  GET_EMPLOYEES_FAIL,\n  SET_SEARCH_WORD,\n  GET_EMPLOYEE_BEGIN,\n  GET_EMPLOYEE_SUCCEED,\n  GET_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCEED,\n  ADD_EMPLOYEE_FAIL,\n  DELETE_EMPLOYEE_BEGIN,\n  DELETE_EMPLOYEE_SUCCEED,\n  DELETE_EMPLOYEE_FAIL,\n  CHANGE_EMPLOYEE_BEGIN,\n  CHANGE_EMPLOYEE_SUCCEED,\n  CHANGE_EMPLOYEE_FAIL,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCEED,\n  REGISTER_USER_FAIL,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCEED,\n  LOGIN_USER_FAIL,\n  LOG_OUT,\n  SEARCH_EMPLOYEES_BEGIN,\n  SEARCH_EMPLOYEES_SUCCEED,\n  SEARCH_EMPLOYEES_FAIL,\n} from \"../action-types\";\n\nconst initialState = {\n  users: [],\n  projects: [\n    {\n      name: \"CRM-System\",\n      id: 0,\n    },\n    {\n      name: \"Podcast Platform\",\n      id: 1,\n    },\n    {\n      name: \"Social Network 'Kartana'\",\n      id: 2,\n    },\n  ],\n  loaderActive: false,\n  err_msg: \"\",\n  searchWord: \"\",\n  loading: false,\n  currentEmployee: {},\n  registerEmailExist: null,\n  loggedUser: null,\n  isUserLogged: false,\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_AUTH_BEGIN:\n      return { ...state, loading: true };\n    case CHECK_AUTH_SUCCEED:\n      console.log(action.payload);\n      return { ...state, isUserLogged: Boolean(action.payload) };\n    case CHECK_AUTH_FAIL:\n      return { ...state, err_msg: action.err_msg };\n    case SET_SEARCH_WORD:\n      return { ...state, searchWord: action.payload };\n    case ADD_EMPLOYEE:\n      return { ...state, users: [...state.users, action.payload] };\n    case GET_EMPLOYEES_BEGIN:\n      return { ...state, loading: true };\n    case GET_EMPLOYEES_SUCCEED:\n      return { ...state, loading: false, users: action.payload };\n    case GET_EMPLOYEES_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case GET_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case GET_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        currentEmployee: action.payload,\n      };\n    case GET_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case ADD_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case ADD_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        users: [...state.users, action.payload],\n      };\n    case ADD_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case DELETE_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case DELETE_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.filter((user) => user._id !== action.id),\n      };\n    case DELETE_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case CHANGE_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case CHANGE_EMPLOYEE_SUCCEED:\n      if (action.payload.validationError) {\n        return {\n          ...state,\n          loading: false,\n        };\n      } else {\n        return {\n          ...state,\n          loading: false,\n          currentEmployee: action.payload,\n        };\n      }\n    case CHANGE_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case REGISTER_USER_BEGIN:\n      return { ...state, loading: true };\n    case REGISTER_USER_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        registerEmailExist: action.registerEmailExist,\n      };\n    case REGISTER_USER_FAIL:\n      return { ...state, loading: false, err_msg: action.err_msg };\n    case LOGIN_USER_BEGIN:\n      return { ...state, loading: true };\n    case LOGIN_USER_SUCCEED:\n      let logged = false;\n      if (!(action.payload === \"auth failed\")) {\n        localStorage.setItem(\"auth-token\", action.payload.authToken);\n        localStorage.setItem(\"logged-user\", JSON.stringify(action.payload));\n        logged = true;\n      }\n      return {\n        ...state,\n        loading: false,\n        loggedUser: action.payload,\n        isUserLogged: logged,\n      };\n    case LOGIN_USER_FAIL:\n      return { ...state, loading: false, error: action.err_msg };\n    case LOG_OUT:\n      localStorage.clear();\n      return { ...state, isUserLogged: false };\n    case SEARCH_EMPLOYEES_BEGIN:\n      return { ...state, loading: true };\n    case SEARCH_EMPLOYEES_SUCCEED:\n      return { ...state, loading: false, users: action.payload };\n    case SEARCH_EMPLOYEES_FAIL:\n      return { ...state, err_msg: action.err_msg };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}