{"ast":null,"code":"import { GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCEED, GET_EMPLOYEES_FAIL, SET_SEARCH_WORD, GET_EMPLOYEE_BEGIN, GET_EMPLOYEE_SUCCEED, GET_EMPLOYEE_FAIL, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCEED, ADD_EMPLOYEE_FAIL, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCEED, DELETE_EMPLOYEE_FAIL, CHANGE_EMPLOYEE_BEGIN, CHANGE_EMPLOYEE_SUCCEED, CHANGE_EMPLOYEE_FAIL } from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = payload => {\n  return {\n    type: SET_SEARCH_WORD,\n    payload\n  };\n};\nexport const getEmployees = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEES_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/users/`);\n      dispatch({\n        type: GET_EMPLOYEES_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEES_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const getEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`);\n      dispatch({\n        type: GET_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_EMPLOYEE_FAIL,\n        err: err.massage\n      });\n    }\n  };\n};\nexport const addEmployee = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ADD_EMPLOYEE_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/`, payload);\n      console.log(data);\n      dispatch({\n        type: ADD_EMPLOYEE_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_EMPLOYEE_FAIL\n      });\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_EMPLOYEE_BEGIN\n      });\n      await axios.delete(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`);\n      dispatch({\n        type: DELETE_EMPLOYEE_SUCCEED,\n        id\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CHANGE_EMPLOYEE_BEGIN\n      });\n      const changedEmployee = await axios.patch(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`, payload);\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({\n        type: CHANGE_EMPLOYEE_FAIL,\n        err: err.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/actions/actions.js"],"names":["GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCEED","GET_EMPLOYEES_FAIL","SET_SEARCH_WORD","GET_EMPLOYEE_BEGIN","GET_EMPLOYEE_SUCCEED","GET_EMPLOYEE_FAIL","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCEED","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCEED","DELETE_EMPLOYEE_FAIL","CHANGE_EMPLOYEE_BEGIN","CHANGE_EMPLOYEE_SUCCEED","CHANGE_EMPLOYEE_FAIL","axios","setSearchWord","payload","type","getEmployees","dispatch","data","get","process","env","REACT_APP_PORT","err","message","getEmployee","id","massage","addEmployee","post","console","log","deleteEmployee","delete","changeEmployee","changedEmployee","patch"],"mappings":"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","sourcesContent":["import {\n  GET_EMPLOYEES_BEGIN,\n  GET_EMPLOYEES_SUCCEED,\n  GET_EMPLOYEES_FAIL,\n  SET_SEARCH_WORD,\n  GET_EMPLOYEE_BEGIN,\n  GET_EMPLOYEE_SUCCEED,\n  GET_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCEED,\n  ADD_EMPLOYEE_FAIL,\n  DELETE_EMPLOYEE_BEGIN,\n  DELETE_EMPLOYEE_SUCCEED,\n  DELETE_EMPLOYEE_FAIL,\n  CHANGE_EMPLOYEE_BEGIN,\n  CHANGE_EMPLOYEE_SUCCEED,\n  CHANGE_EMPLOYEE_FAIL,\n} from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = (payload) => {\n  return { type: SET_SEARCH_WORD, payload };\n};\n\nexport const getEmployees = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEES_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/`\n      );\n      dispatch({ type: GET_EMPLOYEES_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEES_FAIL, err: err.message });\n    }\n  };\n};\nexport const getEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_EMPLOYEE_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`\n      );\n      dispatch({ type: GET_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_EMPLOYEE_FAIL, err: err.massage });\n    }\n  };\n};\nexport const addEmployee = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: ADD_EMPLOYEE_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/`,\n        payload\n      );\n      console.log(data);\n      dispatch({ type: ADD_EMPLOYEE_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: ADD_EMPLOYEE_FAIL });\n    }\n  };\n};\nexport const deleteEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_EMPLOYEE_BEGIN });\n      await axios.delete(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`\n      );\n      dispatch({ type: DELETE_EMPLOYEE_SUCCEED, id });\n    } catch (err) {\n      dispatch({ type: DELETE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: CHANGE_EMPLOYEE_BEGIN });\n      const changedEmployee = await axios.patch(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`,\n        payload\n      );\n      dispatch({\n        type: CHANGE_EMPLOYEE_SUCCEED,\n        payload: changedEmployee.data,\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({ type: CHANGE_EMPLOYEE_FAIL, err: err.message });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}