{"ast":null,"code":"import { GET_USERS_BEGIN, GET_USERS_SUCCEED, GET_USERS_FAIL, SET_SEARCH_WORD, GET_USER_BEGIN, GET_USER_SUCCEED, GET_USER_FAIL, ADD_USER_BEGIN, ADD_USER_SUCCEED, ADD_USER_FAIL, DELETE_USER_BEGIN, DELETE_USER_SUCCEED, DELETE_USER_FAIL, CHANGE_USER_BEGIN, CHANGE_USER_SUCCEED, CHANGE_USER_FAIL } from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = payload => {\n  return {\n    type: SET_SEARCH_WORD,\n    payload\n  };\n};\nexport const getUsers = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_USERS_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/users/`);\n      dispatch({\n        type: GET_USERS_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_USERS_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const getUser = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.get(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`);\n      dispatch({\n        type: GET_USER_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_USER_FAIL,\n        err: err.massage\n      });\n    }\n  };\n};\nexport const addEmployee = payload => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ADD_USER_BEGIN\n      });\n      const {\n        data\n      } = await axios.post(`http://localhost:${process.env.REACT_APP_PORT}/users/`, payload);\n      console.log(data);\n      dispatch({\n        type: ADD_USER_SUCCEED,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: ADD_USER_FAIL\n      });\n    }\n  };\n};\nexport const deleteEmployee = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_USER_BEGIN\n      });\n      await axios.delete(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`);\n      dispatch({\n        type: DELETE_USER_SUCCEED,\n        id\n      });\n    } catch (err) {\n      dispatch({\n        type: DELETE_USER_FAIL,\n        err: err.message\n      });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CHANGE_USER_BEGIN\n      });\n      const changedEmployee = await axios.patch(`http://localhost:${process.env.REACT_APP_PORT}/users/${id}`, payload);\n      dispatch({\n        type: CHANGE_USER_SUCCEED,\n        payload: changedEmployee.data\n      });\n      return \"Done\";\n    } catch (err) {\n      dispatch({\n        type: CHANGE_USER_FAIL,\n        err: err.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/actions/actions.js"],"names":["GET_USERS_BEGIN","GET_USERS_SUCCEED","GET_USERS_FAIL","SET_SEARCH_WORD","GET_USER_BEGIN","GET_USER_SUCCEED","GET_USER_FAIL","ADD_USER_BEGIN","ADD_USER_SUCCEED","ADD_USER_FAIL","DELETE_USER_BEGIN","DELETE_USER_SUCCEED","DELETE_USER_FAIL","CHANGE_USER_BEGIN","CHANGE_USER_SUCCEED","CHANGE_USER_FAIL","axios","setSearchWord","payload","type","getUsers","dispatch","data","get","process","env","REACT_APP_PORT","err","message","getUser","id","massage","addEmployee","post","console","log","deleteEmployee","delete","changeEmployee","changedEmployee","patch"],"mappings":"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","sourcesContent":["import {\n  GET_USERS_BEGIN,\n  GET_USERS_SUCCEED,\n  GET_USERS_FAIL,\n  SET_SEARCH_WORD,\n  GET_USER_BEGIN,\n  GET_USER_SUCCEED,\n  GET_USER_FAIL,\n  ADD_USER_BEGIN,\n  ADD_USER_SUCCEED,\n  ADD_USER_FAIL,\n  DELETE_USER_BEGIN,\n  DELETE_USER_SUCCEED,\n  DELETE_USER_FAIL,\n  CHANGE_USER_BEGIN,\n  CHANGE_USER_SUCCEED,\n  CHANGE_USER_FAIL,\n} from \"../action-types\";\nimport axios from \"axios\";\nexport const setSearchWord = (payload) => {\n  return { type: SET_SEARCH_WORD, payload };\n};\n\nexport const getUsers = () => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_USERS_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/`\n      );\n      dispatch({ type: GET_USERS_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_USERS_FAIL, err: err.message });\n    }\n  };\n};\nexport const getUser = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: GET_USER_BEGIN });\n      const { data } = await axios.get(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`\n      );\n      dispatch({ type: GET_USER_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: GET_USER_FAIL, err: err.massage });\n    }\n  };\n};\nexport const addEmployee = (payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: ADD_USER_BEGIN });\n      const { data } = await axios.post(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/`,\n        payload\n      );\n      console.log(data);\n      dispatch({ type: ADD_USER_SUCCEED, payload: data });\n    } catch (err) {\n      dispatch({ type: ADD_USER_FAIL });\n    }\n  };\n};\nexport const deleteEmployee = (id) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: DELETE_USER_BEGIN });\n      await axios.delete(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`\n      );\n      dispatch({ type: DELETE_USER_SUCCEED, id });\n    } catch (err) {\n      dispatch({ type: DELETE_USER_FAIL, err: err.message });\n    }\n  };\n};\nexport const changeEmployee = (id, payload) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: CHANGE_USER_BEGIN });\n      const changedEmployee = await axios.patch(\n        `http://localhost:${process.env.REACT_APP_PORT}/users/${id}`,\n        payload\n      );\n      dispatch({ type: CHANGE_USER_SUCCEED, payload: changedEmployee.data });\n      return \"Done\";\n    } catch (err) {\n      dispatch({ type: CHANGE_USER_FAIL, err: err.message });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}