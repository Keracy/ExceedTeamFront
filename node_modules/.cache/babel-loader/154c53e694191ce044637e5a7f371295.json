{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\"\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\"\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\"\n  },\n  loginBtn: {\n    marginTop: \"20px\"\n  },\n  link: {\n    color: \"#3583d2\"\n  }\n});\n\nconst RegisterPage = props => {\n  const {\n    registerUser\n  } = props;\n\n  const submitHandler = event => {\n    event.preventDefault();\n    registerUser(user);\n  };\n\n  const changeHandler = event => {\n    event.persist();\n\n    switch (event.target.name) {\n      case \"username\":\n        setUser(prevValue => ({ ...prevValue,\n          username: event.target.value\n        }));\n        break;\n\n      case \"password\":\n        setUser(prevValue => ({ ...prevValue,\n          password: event.target.value\n        }));\n        break;\n\n      case \"phone\":\n        setUser(prevValue => ({ ...prevValue,\n          phone: event.target.value\n        }));\n        break;\n\n      case \"email\":\n        setUser(prevValue => ({ ...prevValue,\n          email: event.target.value\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const s = useStyles();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.registerBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    component: \"form\",\n    onSubmit: submitHandler,\n    className: s.formBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Username\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Password\",\n    type: \"password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"E-Mail\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"phone\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Phone\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Log in!\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: s.loginBtn,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = {\n  registerUser\n};\n\nconst mapStateToProps = state => {\n  return {\n    registerEmailExist: state.registerEmailExist\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx"],"names":["React","useState","Button","TextField","Typography","makeStyles","Link","registerUser","connect","useStyles","registerBlock","textAlign","display","justifyContent","alignItems","height","formBlock","padding","width","flexDirection","border","borderRadius","backgroundColor","inputField","marginBottom","loginBtn","marginTop","link","color","RegisterPage","props","submitHandler","event","preventDefault","user","changeHandler","persist","target","name","setUser","prevValue","username","value","password","phone","email","s","mapDispatchToProps","mapStateToProps","state","registerEmailExist"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\",\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\",\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\",\n  },\n  loginBtn: {\n    marginTop: \"20px\",\n  },\n  link: {\n    color: \"#3583d2\",\n  },\n});\n\nconst RegisterPage = (props) => {\n  const { registerUser } = props;\n  const submitHandler = (event) => {\n    event.preventDefault();\n    registerUser(user);\n  };\n  const changeHandler = (event) => {\n    event.persist();\n    switch (event.target.name) {\n      case \"username\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          username: event.target.value,\n        }));\n        break;\n      case \"password\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          password: event.target.value,\n        }));\n        break;\n      case \"phone\":\n        setUser((prevValue) => ({ ...prevValue, phone: event.target.value }));\n        break;\n      case \"email\":\n        setUser((prevValue) => ({ ...prevValue, email: event.target.value }));\n        break;\n      default:\n        break;\n    }\n  };\n  const s = useStyles();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  return (\n    <div className={s.registerBlock}>\n      <form component=\"form\" onSubmit={submitHandler} className={s.formBlock}>\n        <TextField\n          name=\"username\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Username\"\n          variant=\"outlined\"\n        />\n        <TextField\n          name=\"password\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n        />\n        <TextField\n          name=\"email\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"E-Mail\"\n          variant=\"outlined\"\n        />\n        {}\n        <TextField\n          name=\"phone\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Phone\"\n          variant=\"outlined\"\n        />\n        <Typography>\n          Already have an account?{\" \"}\n          <Link className={s.link} to=\"/auth\">\n            Log in!\n          </Link>\n        </Typography>\n        <Button\n          type=\"submit\"\n          className={s.loginBtn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  registerUser,\n};\nconst mapStateToProps = (state) => {\n  return {\n    registerEmailExist: state.registerEmailExist,\n  };\n};\nexport default connect(null, mapDispatchToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}