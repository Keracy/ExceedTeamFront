{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\"\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\"\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\"\n  },\n  loginBtn: {\n    marginTop: \"20px\"\n  },\n  link: {\n    color: \"#3583d2\"\n  },\n  errorMessage: {\n    marginTop: \"-20px\"\n  }\n});\n\nconst RegisterPage = props => {\n  const {\n    registerUser,\n    registerEmailExist\n  } = props;\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (user.username.length <= 3 || user.username.length >= 50) {\n      setUsernameError(prevValue => !prevValue);\n    }\n\n    if (user.password.length <= 6) {\n      setPasswordError(prevValue => !prevValue);\n    }\n\n    if (!user.email.includes(\"@\") && user.email.includes(\".\") || user.email.length <= 5) {\n      setEmailError(prevValue => !prevValue);\n    }\n\n    if (user.phone.length < 11 || user.username.length > 12) {\n      setPhoneError(prevValue => !prevValue);\n    }\n\n    registerUser(user);\n  };\n\n  const changeHandler = event => {\n    event.persist();\n\n    switch (event.target.name) {\n      case \"username\":\n        setUser(prevValue => ({ ...prevValue,\n          username: event.target.value\n        }));\n        break;\n\n      case \"password\":\n        setUser(prevValue => ({ ...prevValue,\n          password: event.target.value\n        }));\n        break;\n\n      case \"phone\":\n        setUser(prevValue => ({ ...prevValue,\n          phone: event.target.value\n        }));\n        break;\n\n      case \"email\":\n        setUser(prevValue => ({ ...prevValue,\n          email: event.target.value\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const s = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.registerBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    component: \"form\",\n    onSubmit: submitHandler,\n    className: s.formBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"username\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Username\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"password\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Password\",\n    type: \"password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"email\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"E-Mail\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), registerEmailExist ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"E-Mail already exist\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    name: \"phone\",\n    onChange: changeHandler,\n    className: s.inputField,\n    placeholder: \"Phone\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Log in!\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: s.loginBtn,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = {\n  registerUser\n};\n\nconst mapStateToProps = state => {\n  return {\n    registerEmailExist: state.registerEmailExist\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx"],"names":["React","useState","Button","TextField","Typography","makeStyles","Link","registerUser","connect","useStyles","registerBlock","textAlign","display","justifyContent","alignItems","height","formBlock","padding","width","flexDirection","border","borderRadius","backgroundColor","inputField","marginBottom","loginBtn","marginTop","link","color","errorMessage","RegisterPage","props","registerEmailExist","user","setUser","username","password","phone","email","usernameError","setUsernameError","passwordError","setPasswordError","emailError","setEmailError","phoneError","setPhoneError","submitHandler","event","preventDefault","length","prevValue","includes","changeHandler","persist","target","name","value","s","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\",\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\",\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\",\n  },\n  loginBtn: {\n    marginTop: \"20px\",\n  },\n  link: {\n    color: \"#3583d2\",\n  },\n  errorMessage: {\n    marginTop: \"-20px\",\n  },\n});\n\nconst RegisterPage = (props) => {\n  const { registerUser, registerEmailExist } = props;\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (user.username.length <= 3 || user.username.length >= 50) {\n      setUsernameError((prevValue) => !prevValue);\n    }\n    if (user.password.length <= 6) {\n      setPasswordError((prevValue) => !prevValue);\n    }\n    if (\n      (!user.email.includes(\"@\") && user.email.includes(\".\")) ||\n      user.email.length <= 5\n    ) {\n      setEmailError((prevValue) => !prevValue);\n    }\n    if (user.phone.length < 11 || user.username.length > 12) {\n      setPhoneError((prevValue) => !prevValue);\n    }\n    registerUser(user);\n  };\n  const changeHandler = (event) => {\n    event.persist();\n    switch (event.target.name) {\n      case \"username\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          username: event.target.value,\n        }));\n        break;\n      case \"password\":\n        setUser((prevValue) => ({\n          ...prevValue,\n          password: event.target.value,\n        }));\n        break;\n      case \"phone\":\n        setUser((prevValue) => ({ ...prevValue, phone: event.target.value }));\n        break;\n      case \"email\":\n        setUser((prevValue) => ({ ...prevValue, email: event.target.value }));\n        break;\n      default:\n        break;\n    }\n  };\n  const s = useStyles();\n  return (\n    <div className={s.registerBlock}>\n      <form component=\"form\" onSubmit={submitHandler} className={s.formBlock}>\n        <TextField\n          name=\"username\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Username\"\n          variant=\"outlined\"\n        />\n        <TextField\n          name=\"password\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n        />\n        <TextField\n          name=\"email\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"E-Mail\"\n          variant=\"outlined\"\n        />\n        {registerEmailExist ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            E-Mail already exist\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          name=\"phone\"\n          onChange={changeHandler}\n          className={s.inputField}\n          placeholder=\"Phone\"\n          variant=\"outlined\"\n        />\n        <Typography>\n          Already have an account?{\" \"}\n          <Link className={s.link} to=\"/auth\">\n            Log in!\n          </Link>\n        </Typography>\n        <Button\n          type=\"submit\"\n          className={s.loginBtn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  registerUser,\n};\nconst mapStateToProps = (state) => {\n  return {\n    registerEmailExist: state.registerEmailExist,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}