{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\"\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\"\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\"\n  },\n  loginBtn: {\n    marginTop: \"20px\"\n  },\n  link: {\n    color: \"#3583d2\"\n  },\n  errorMessage: {\n    marginTop: \"-20px\"\n  }\n});\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"First name is required field.\"),\n  email: yup.string().email(\"Please enter email address in format: yourname@example.com\").required(\"Please enter email address in format: yourname@example.com\"),\n  phone: yup.string().min(6, \"Password should be more then 5 symbols\").required(\"Phone is required field.\"),\n  password: yup.string().required(\"Password is required field.\")\n});\n\nconst RegisterPage = props => {\n  const {\n    registerUser,\n    registerEmailExist\n  } = props;\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    try {\n      validationSchema.validateSync({ ...user\n      }, {\n        abortEarly: false\n      });\n      registerUser(user);\n    } catch (err) {\n      const getErrorFields = () => err.inner.reduce((obj, item) => {\n        obj[item.path] = item.message;\n        return obj;\n      }, {});\n\n      const errorFields = getErrorFields();\n      setErrors(errorFields);\n    }\n  };\n\n  const handleInputChange = event => {\n    setUser({ ...user,\n      [event.target.name]: event.target.value\n    });\n    setErrors({ ...errors,\n      [event.target.name]: \"\"\n    });\n  };\n\n  const s = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.registerBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    component: \"form\",\n    onSubmit: submitHandler,\n    className: s.formBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(errors.username),\n    helperText: errors.username,\n    name: \"username\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Username\",\n    variant: \"outlined\",\n    value: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), false ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Username\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(errors.password),\n    helperText: errors.password,\n    name: \"password\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Password\",\n    type: \"password\",\n    variant: \"outlined\",\n    value: user.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), false ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Password\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(errors.email),\n    helperText: errors.email,\n    type: \"email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"E-Mail\",\n    variant: \"outlined\",\n    value: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), false ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Enter a correct E-Mail\") : /*#__PURE__*/React.createElement(React.Fragment, null), registerEmailExist ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"E-Mail already exist\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(TextField, {\n    error: Boolean(errors.phone),\n    helperText: errors.phone,\n    name: \"phone\",\n    onChange: handleInputChange,\n    className: s.inputField,\n    placeholder: \"Phone\",\n    variant: \"outlined\",\n    value: user.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), false ? /*#__PURE__*/React.createElement(Typography, {\n    className: s.errorMessage,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, \"Enter a correct Phone\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: \"/auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Log in!\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: s.loginBtn,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = {\n  registerUser\n};\n\nconst mapStateToProps = state => {\n  return {\n    registerEmailExist: state.registerEmailExist\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/RegisterPage/RegisterPage.jsx"],"names":["React","useState","useEffect","Button","TextField","Typography","makeStyles","Link","registerUser","connect","yup","useStyles","registerBlock","textAlign","display","justifyContent","alignItems","height","formBlock","padding","width","flexDirection","border","borderRadius","backgroundColor","inputField","marginBottom","loginBtn","marginTop","link","color","errorMessage","validationSchema","object","shape","username","string","required","email","phone","min","password","RegisterPage","props","registerEmailExist","errors","setErrors","user","setUser","submitHandler","event","preventDefault","validateSync","abortEarly","err","getErrorFields","inner","reduce","obj","item","path","message","errorFields","handleInputChange","target","name","value","s","Boolean","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport { registerUser } from \"../redux/actions/actions\";\nimport { connect } from \"react-redux\";\nimport * as yup from \"yup\";\n\nconst useStyles = makeStyles({\n  registerBlock: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\",\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    width: \"450px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\",\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\",\n  },\n  loginBtn: {\n    marginTop: \"20px\",\n  },\n  link: {\n    color: \"#3583d2\",\n  },\n  errorMessage: {\n    marginTop: \"-20px\",\n  },\n});\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"First name is required field.\"),\n  email: yup\n    .string()\n    .email(\"Please enter email address in format: yourname@example.com\")\n    .required(\"Please enter email address in format: yourname@example.com\"),\n  phone: yup\n    .string()\n    .min(6, \"Password should be more then 5 symbols\")\n    .required(\"Phone is required field.\"),\n  password: yup.string().required(\"Password is required field.\"),\n});\n\nconst RegisterPage = (props) => {\n  const { registerUser, registerEmailExist } = props;\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  const submitHandler = (event) => {\n    event.preventDefault();\n    try {\n      validationSchema.validateSync({ ...user }, { abortEarly: false });\n      registerUser(user);\n    } catch (err) {\n      const getErrorFields = () =>\n        err.inner.reduce((obj, item) => {\n          obj[item.path] = item.message;\n          return obj;\n        }, {});\n      const errorFields = getErrorFields();\n      setErrors(errorFields);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    setUser({ ...user, [event.target.name]: event.target.value });\n    setErrors({ ...errors, [event.target.name]: \"\" });\n  };\n\n  const s = useStyles();\n  return (\n    <div className={s.registerBlock}>\n      <form component=\"form\" onSubmit={submitHandler} className={s.formBlock}>\n        <TextField\n          error={Boolean(errors.username)}\n          helperText={errors.username}\n          name=\"username\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Username\"\n          variant=\"outlined\"\n          value={user.username}\n        />\n        {false ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Username\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          error={Boolean(errors.password)}\n          helperText={errors.password}\n          name=\"password\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          value={user.password}\n        />\n        {false ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Password\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          error={Boolean(errors.email)}\n          helperText={errors.email}\n          type=\"email\"\n          name=\"email\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"E-Mail\"\n          variant=\"outlined\"\n          value={user.email}\n        />\n        {false ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct E-Mail\n          </Typography>\n        ) : (\n          <></>\n        )}\n        {registerEmailExist ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            E-Mail already exist\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <TextField\n          error={Boolean(errors.phone)}\n          helperText={errors.phone}\n          name=\"phone\"\n          onChange={handleInputChange}\n          className={s.inputField}\n          placeholder=\"Phone\"\n          variant=\"outlined\"\n          value={user.phone}\n        />\n        {false ? (\n          <Typography className={s.errorMessage} color=\"error\">\n            Enter a correct Phone\n          </Typography>\n        ) : (\n          <></>\n        )}\n        <Typography>\n          Already have an account?{\" \"}\n          <Link className={s.link} to=\"/auth\">\n            Log in!\n          </Link>\n        </Typography>\n        <Button\n          type=\"submit\"\n          className={s.loginBtn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  registerUser,\n};\nconst mapStateToProps = (state) => {\n  return {\n    registerEmailExist: state.registerEmailExist,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\n"]},"metadata":{},"sourceType":"module"}