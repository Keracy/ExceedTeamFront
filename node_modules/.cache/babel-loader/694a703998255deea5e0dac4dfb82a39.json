{"ast":null,"code":"import { CHECK_AUTH, ADD_EMPLOYEE, GET_EMPLOYEES_BEGIN, GET_EMPLOYEES_SUCCEED, GET_EMPLOYEES_FAIL, SET_SEARCH_WORD, GET_EMPLOYEE_BEGIN, GET_EMPLOYEE_SUCCEED, GET_EMPLOYEE_FAIL, ADD_EMPLOYEE_BEGIN, ADD_EMPLOYEE_SUCCEED, ADD_EMPLOYEE_FAIL, DELETE_EMPLOYEE_BEGIN, DELETE_EMPLOYEE_SUCCEED, DELETE_EMPLOYEE_FAIL, CHANGE_EMPLOYEE_BEGIN, CHANGE_EMPLOYEE_SUCCEED, CHANGE_EMPLOYEE_FAIL, REGISTER_USER_BEGIN, REGISTER_USER_SUCCEED, REGISTER_USER_FAIL, LOGIN_USER_BEGIN, LOGIN_USER_SUCCEED, LOGIN_USER_FAIL } from \"../action-types\";\nconst initialState = {\n  users: [],\n  projects: [{\n    name: \"CRM-System\",\n    id: 0\n  }, {\n    name: \"Podcast Platform\",\n    id: 1\n  }, {\n    name: \"Social Network 'Kartana'\",\n    id: 2\n  }],\n  loaderActive: false,\n  err_msg: \"\",\n  searchWord: \"\",\n  loading: false,\n  currentEmployee: {},\n  registerEmailExist: null,\n  loggedUser: null,\n  isUserLogged: false\n};\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_AUTH:\n      return { ...state,\n        isUserLogged: action.payload\n      };\n\n    case SET_SEARCH_WORD:\n      return { ...state,\n        searchWord: action.payload\n      };\n\n    case ADD_EMPLOYEE:\n      return { ...state,\n        users: [...state.users, action.payload]\n      };\n\n    case GET_EMPLOYEES_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_EMPLOYEES_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: action.payload\n      };\n\n    case GET_EMPLOYEES_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case GET_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        currentEmployee: action.payload\n      };\n\n    case GET_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case ADD_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: [...state.users, action.payload]\n      };\n\n    case ADD_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case DELETE_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_EMPLOYEE_SUCCEED:\n      return { ...state,\n        loading: false,\n        users: state.users.filter(user => user._id !== action.id)\n      };\n\n    case DELETE_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case CHANGE_EMPLOYEE_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case CHANGE_EMPLOYEE_SUCCEED:\n      if (action.payload.validationError) {\n        return { ...state,\n          loading: false\n        };\n      } else {\n        return { ...state,\n          loading: false,\n          currentEmployee: action.payload\n        };\n      }\n\n    case CHANGE_EMPLOYEE_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err\n      };\n\n    case REGISTER_USER_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case REGISTER_USER_SUCCEED:\n      return { ...state,\n        loading: false,\n        registerEmailExist: action.registerEmailExist\n      };\n\n    case REGISTER_USER_FAIL:\n      return { ...state,\n        loading: false,\n        err_msg: action.err_msg\n      };\n\n    case LOGIN_USER_BEGIN:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGIN_USER_SUCCEED:\n      if (!(action.payload === \"auth failed\")) {\n        console.log(action.payload);\n        localStorage.setItem(\"auth-token\", action.payload.authToken);\n        localStorage.setItem(\"logged-user\", ...action.payload);\n      }\n\n      return { ...state,\n        loading: false,\n        loggedUser: action.payload\n      };\n\n    case LOGIN_USER_FAIL:\n      return { ...state,\n        loading: false,\n        error: action.err_msg\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/redux/reducers/reducer.js"],"names":["CHECK_AUTH","ADD_EMPLOYEE","GET_EMPLOYEES_BEGIN","GET_EMPLOYEES_SUCCEED","GET_EMPLOYEES_FAIL","SET_SEARCH_WORD","GET_EMPLOYEE_BEGIN","GET_EMPLOYEE_SUCCEED","GET_EMPLOYEE_FAIL","ADD_EMPLOYEE_BEGIN","ADD_EMPLOYEE_SUCCEED","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_BEGIN","DELETE_EMPLOYEE_SUCCEED","DELETE_EMPLOYEE_FAIL","CHANGE_EMPLOYEE_BEGIN","CHANGE_EMPLOYEE_SUCCEED","CHANGE_EMPLOYEE_FAIL","REGISTER_USER_BEGIN","REGISTER_USER_SUCCEED","REGISTER_USER_FAIL","LOGIN_USER_BEGIN","LOGIN_USER_SUCCEED","LOGIN_USER_FAIL","initialState","users","projects","name","id","loaderActive","err_msg","searchWord","loading","currentEmployee","registerEmailExist","loggedUser","isUserLogged","rootReducer","state","action","type","payload","err","filter","user","_id","validationError","console","log","localStorage","setItem","authToken","error"],"mappings":"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","sourcesContent":["import {\n  CHECK_AUTH,\n  ADD_EMPLOYEE,\n  GET_EMPLOYEES_BEGIN,\n  GET_EMPLOYEES_SUCCEED,\n  GET_EMPLOYEES_FAIL,\n  SET_SEARCH_WORD,\n  GET_EMPLOYEE_BEGIN,\n  GET_EMPLOYEE_SUCCEED,\n  GET_EMPLOYEE_FAIL,\n  ADD_EMPLOYEE_BEGIN,\n  ADD_EMPLOYEE_SUCCEED,\n  ADD_EMPLOYEE_FAIL,\n  DELETE_EMPLOYEE_BEGIN,\n  DELETE_EMPLOYEE_SUCCEED,\n  DELETE_EMPLOYEE_FAIL,\n  CHANGE_EMPLOYEE_BEGIN,\n  CHANGE_EMPLOYEE_SUCCEED,\n  CHANGE_EMPLOYEE_FAIL,\n  REGISTER_USER_BEGIN,\n  REGISTER_USER_SUCCEED,\n  REGISTER_USER_FAIL,\n  LOGIN_USER_BEGIN,\n  LOGIN_USER_SUCCEED,\n  LOGIN_USER_FAIL,\n} from \"../action-types\";\n\nconst initialState = {\n  users: [],\n  projects: [\n    {\n      name: \"CRM-System\",\n      id: 0,\n    },\n    {\n      name: \"Podcast Platform\",\n      id: 1,\n    },\n    {\n      name: \"Social Network 'Kartana'\",\n      id: 2,\n    },\n  ],\n  loaderActive: false,\n  err_msg: \"\",\n  searchWord: \"\",\n  loading: false,\n  currentEmployee: {},\n  registerEmailExist: null,\n  loggedUser: null,\n  isUserLogged: false,\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECK_AUTH:\n      return { ...state, isUserLogged: action.payload };\n    case SET_SEARCH_WORD:\n      return { ...state, searchWord: action.payload };\n    case ADD_EMPLOYEE:\n      return { ...state, users: [...state.users, action.payload] };\n    case GET_EMPLOYEES_BEGIN:\n      return { ...state, loading: true };\n    case GET_EMPLOYEES_SUCCEED:\n      return { ...state, loading: false, users: action.payload };\n    case GET_EMPLOYEES_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case GET_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case GET_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        currentEmployee: action.payload,\n      };\n    case GET_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case ADD_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case ADD_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        users: [...state.users, action.payload],\n      };\n    case ADD_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case DELETE_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case DELETE_EMPLOYEE_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.filter((user) => user._id !== action.id),\n      };\n    case DELETE_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case CHANGE_EMPLOYEE_BEGIN:\n      return { ...state, loading: true };\n    case CHANGE_EMPLOYEE_SUCCEED:\n      if (action.payload.validationError) {\n        return {\n          ...state,\n          loading: false,\n        };\n      } else {\n        return {\n          ...state,\n          loading: false,\n          currentEmployee: action.payload,\n        };\n      }\n    case CHANGE_EMPLOYEE_FAIL:\n      return { ...state, loading: false, err_msg: action.err };\n    case REGISTER_USER_BEGIN:\n      return { ...state, loading: true };\n    case REGISTER_USER_SUCCEED:\n      return {\n        ...state,\n        loading: false,\n        registerEmailExist: action.registerEmailExist,\n      };\n    case REGISTER_USER_FAIL:\n      return { ...state, loading: false, err_msg: action.err_msg };\n    case LOGIN_USER_BEGIN:\n      return { ...state, loading: true };\n    case LOGIN_USER_SUCCEED:\n      if (!(action.payload === \"auth failed\")) {\n        console.log(action.payload);\n        localStorage.setItem(\"auth-token\", action.payload.authToken);\n        localStorage.setItem(\"logged-user\", ...action.payload);\n      }\n      return { ...state, loading: false, loggedUser: action.payload };\n    case LOGIN_USER_FAIL:\n      return { ...state, loading: false, error: action.err_msg };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}