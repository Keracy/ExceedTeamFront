{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/LoginPage/LoginPage.jsx\";\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/actions\";\nconst useStyles = makeStyles({\n  loginBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\"\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\"\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\"\n  },\n  loginBtn: {\n    marginTop: \"20px\"\n  },\n  link: {\n    color: \"#3583d2\"\n  }\n});\n\nconst LoginPage = props => {\n  const {\n    loginUser,\n    isUserLogged\n  } = props;\n  const s = useStyles();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const changeHandler = event => {\n    setUser({ ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    loginUser(user);\n  };\n\n  return isUserLogged ? /*#__PURE__*/React.createElement(Redirect, {\n    from: \"/auth\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: s.loginBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    component: \"form\",\n    className: s.formBlock,\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: s.inputField,\n    onChange: changeHandler,\n    name: \"username\",\n    placeholder: \"Username\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: s.inputField,\n    onChange: changeHandler,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Do not have any account yet?\", \" \", /*#__PURE__*/React.createElement(Link, {\n    className: s.link,\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Register\"), \"!\"), /*#__PURE__*/React.createElement(Button, {\n    className: s.loginBtn,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Log in\")));\n};\n\nconst mapDispatchToProps = {\n  loginUser\n};\n\nconst mapStateToProps = state => {\n  return {\n    isUserLogged: state.isUserLogged\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/LoginPage/LoginPage.jsx"],"names":["React","useState","Button","TextField","Typography","makeStyles","Link","Redirect","connect","loginUser","useStyles","loginBlock","display","justifyContent","alignItems","height","formBlock","padding","flexDirection","border","borderRadius","backgroundColor","inputField","marginBottom","loginBtn","marginTop","link","color","LoginPage","props","isUserLogged","s","user","setUser","username","password","changeHandler","event","target","name","value","submitHandler","preventDefault","mapDispatchToProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/actions\";\n\nconst useStyles = makeStyles({\n  loginBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"85vh\",\n  },\n  formBlock: {\n    display: \"flex\",\n    padding: \"30px\",\n    flexDirection: \"column\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    backgroundColor: \"#f2ffff\",\n  },\n  inputField: {\n    backgroundColor: \"#fff\",\n    marginBottom: \"20px\",\n  },\n  loginBtn: {\n    marginTop: \"20px\",\n  },\n  link: {\n    color: \"#3583d2\",\n  },\n});\n\nconst LoginPage = (props) => {\n  const { loginUser, isUserLogged } = props;\n  const s = useStyles();\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const changeHandler = (event) => {\n    setUser({ ...user, [event.target.name]: event.target.value });\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    loginUser(user);\n  };\n  return isUserLogged ? (\n    <Redirect from=\"/auth\" to=\"/\" />\n  ) : (\n    <div className={s.loginBlock}>\n      <form component=\"form\" className={s.formBlock} onSubmit={submitHandler}>\n        <TextField\n          className={s.inputField}\n          onChange={changeHandler}\n          name=\"username\"\n          placeholder=\"Username\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={s.inputField}\n          onChange={changeHandler}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          variant=\"outlined\"\n        />\n        <Typography>\n          Do not have any account yet?{\" \"}\n          <Link className={s.link} to=\"/register\">\n            Register\n          </Link>\n          !\n        </Typography>\n        <Button\n          className={s.loginBtn}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Log in\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  loginUser,\n};\nconst mapStateToProps = (state) => {\n  return { isUserLogged: state.isUserLogged };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}