{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/ExeedTeamFront/src/components/UserPage/UserPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser, changeEmployee } from \"../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  progress: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\"\n  },\n  userPage: {\n    backgroundColor: \"#f2ffff\",\n    margin: \"40px\",\n    padding: \"30px\",\n    height: \"auto\",\n    width: \"80%\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    border: \"1px solid black\",\n    borderRadius: \"5px\",\n    boxShadow: \"3px 3px 10px black\"\n  },\n  pageBlock: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  avatar: {\n    border: \"1px solid black\",\n    borderRadius: \"150px\",\n    backgroundColor: \"#fff\"\n  },\n  avatarBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  description: {\n    fontSize: \"40px\"\n  },\n  descriptionBlock: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\"\n  },\n  descriptionWrapper: {\n    display: \"flex\",\n    width: \"100%\"\n  },\n  changeIcon: {\n    cursor: \"pointer\"\n  },\n  btnConfirm: {\n    marginTop: \"50px\"\n  },\n  changeForm: {\n    textAlign: \"center\"\n  }\n});\n\nconst UserPage = props => {\n  const [change, setChange] = useState(false);\n\n  const changeHandler = () => {\n    setChange(prevValue => {\n      return !prevValue;\n    });\n  };\n\n  const {\n    userId\n  } = props.match.params;\n  const s = useStyles();\n  const {\n    loadingUser,\n    user\n  } = props;\n  const [currentUser, setCurrentUser] = useState({\n    name: user.name,\n    phone: user.phone,\n    email: user.email\n  });\n\n  const inputChangeHandler = event => {\n    switch (event.name) {\n      case \"name\":\n        setCurrentUser(prevValue => {\n          return { ...prevValue,\n            name: event.target.value\n          };\n        });\n        break;\n\n      case \"phone\":\n        setCurrentUser(prevValue => ({ ...prevValue,\n          phone: event.target.value\n        }));\n        break;\n\n      case \"email\":\n        setCurrentUser(prevValue => ({ ...prevValue,\n          email: event.target.value\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    changeEmployee(user._id);\n    changeHandler();\n  };\n\n  useEffect(() => {\n    props.getUser(userId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.pageBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, loadingUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: s.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: s.userPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.avatarBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: s.avatar,\n    src: \"https://robohash.org/\" + user._id,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.descriptionWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, change ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    component: \"form\",\n    className: s.changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: inputChangeHandler,\n    defaultValue: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: inputChangeHandler,\n    defaultValue: user.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"E-Mail:\"), /*#__PURE__*/React.createElement(TextField, {\n    onChange: inputChangeHandler,\n    defaultValue: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    className: s.btnConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, \"Confirm\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, \"Name:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: s.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Phone:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: s.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, user.phone)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, \"E-Mail:\"), /*#__PURE__*/React.createElement(Typography, {\n    className: s.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, user.email)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.changeIcon,\n    onClick: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://image.flaticon.com/icons/png/512/61/61456.png\",\n    width: \"20\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  user: state.currentUser,\n  loadingUser: state.loading\n});\n\nconst mapDispatchToProps = {\n  getUser,\n  changeEmployee\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);","map":{"version":3,"sources":["/home/user/Рабочий стол/projects/ExeedTeamFront/src/components/UserPage/UserPage.jsx"],"names":["React","useState","useEffect","connect","getUser","changeEmployee","CircularProgress","makeStyles","Typography","TextField","Button","useStyles","progress","display","justifyContent","alignItems","width","height","userPage","backgroundColor","margin","padding","border","borderRadius","boxShadow","pageBlock","avatar","avatarBlock","description","fontSize","descriptionBlock","flexDirection","descriptionWrapper","changeIcon","cursor","btnConfirm","marginTop","changeForm","textAlign","UserPage","props","change","setChange","changeHandler","prevValue","userId","match","params","s","loadingUser","user","currentUser","setCurrentUser","name","phone","email","inputChangeHandler","event","target","value","submitHandler","preventDefault","_id","mapStateToProps","state","loading","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUser, changeEmployee } from \"../redux/actions/actions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  progress: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  userPage: {\n    backgroundColor: \"#f2ffff\",\n    margin: \"40px\",\n    padding: \"30px\",\n    height: \"auto\",\n    width: \"80%\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    border: \"1px solid black\",\n    borderRadius: \"5px\",\n    boxShadow: \"3px 3px 10px black\",\n  },\n  pageBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    border: \"1px solid black\",\n    borderRadius: \"150px\",\n    backgroundColor: \"#fff\",\n  },\n  avatarBlock: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  description: {\n    fontSize: \"40px\",\n  },\n  descriptionBlock: {\n    display: \"flex\",\n    width: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  descriptionWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  changeIcon: {\n    cursor: \"pointer\",\n  },\n  btnConfirm: {\n    marginTop: \"50px\",\n  },\n  changeForm: {\n    textAlign: \"center\",\n  },\n});\n\nconst UserPage = (props) => {\n  const [change, setChange] = useState(false);\n  const changeHandler = () => {\n    setChange((prevValue) => {\n      return !prevValue;\n    });\n  };\n  const { userId } = props.match.params;\n  const s = useStyles();\n  const { loadingUser, user } = props;\n  const [currentUser, setCurrentUser] = useState({\n    name: user.name,\n    phone: user.phone,\n    email: user.email,\n  });\n  const inputChangeHandler = (event) => {\n    switch (event.name) {\n      case \"name\":\n        setCurrentUser((prevValue) => {\n          return {\n            ...prevValue,\n            name: event.target.value,\n          };\n        });\n        break;\n      case \"phone\":\n        setCurrentUser((prevValue) => ({\n          ...prevValue,\n          phone: event.target.value,\n        }));\n        break;\n      case \"email\":\n        setCurrentUser((prevValue) => ({\n          ...prevValue,\n          email: event.target.value,\n        }));\n        break;\n      default:\n        break;\n    }\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    changeEmployee(user._id);\n    changeHandler();\n  };\n  useEffect(() => {\n    props.getUser(userId);\n  }, []);\n  return (\n    <div className={s.pageBlock}>\n      {loadingUser ? (\n        <div className={s.progress}>\n          <CircularProgress />\n        </div>\n      ) : (\n        <div className={s.userPage}>\n          <div className={s.avatarBlock}>\n            <img\n              className={s.avatar}\n              src={\"https://robohash.org/\" + user._id}\n              alt=\"\"\n            />\n          </div>\n          <div className={s.descriptionWrapper}>\n            <div className={s.descriptionBlock}>\n              {change ? (\n                <form\n                  onSubmit={submitHandler}\n                  component=\"form\"\n                  className={s.changeForm}\n                >\n                  <div>\n                    <Typography>Name:</Typography>\n                    <TextField\n                      onChange={inputChangeHandler}\n                      defaultValue={user.name}\n                    />\n                  </div>\n                  <div>\n                    <Typography>Phone:</Typography>\n                    <TextField\n                      onChange={inputChangeHandler}\n                      defaultValue={user.phone}\n                    />\n                  </div>\n                  <div>\n                    <Typography>E-Mail:</Typography>\n                    <TextField\n                      onChange={inputChangeHandler}\n                      defaultValue={user.email}\n                    />\n                  </div>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    className={s.btnConfirm}\n                  >\n                    Confirm\n                  </Button>\n                </form>\n              ) : (\n                <>\n                  <div>\n                    <Typography>Name:</Typography>\n                    <Typography className={s.description}>\n                      {user.name}\n                    </Typography>\n                  </div>\n                  <div>\n                    <Typography>Phone:</Typography>\n                    <Typography className={s.description}>\n                      {user.phone}\n                    </Typography>\n                  </div>\n                  <div>\n                    <Typography>E-Mail:</Typography>\n                    <Typography className={s.description}>\n                      {user.email}\n                    </Typography>\n                  </div>\n                </>\n              )}\n            </div>\n            <div className={s.changeIcon} onClick={changeHandler}>\n              <img\n                src=\"https://image.flaticon.com/icons/png/512/61/61456.png\"\n                width=\"20\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  user: state.currentUser,\n  loadingUser: state.loading,\n});\nconst mapDispatchToProps = {\n  getUser,\n  changeEmployee,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n"]},"metadata":{},"sourceType":"module"}